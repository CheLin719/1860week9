CHIP P2S {
    IN indata[4], enable, load;
    OUT sout,complete;

    PARTS:
    
    // 4-bit Register to store input data
    Register(in[0..3]=indata, load=load, out=storeddata); //register takes 16 bits, hence why 'bus is different size' error
    
    // 2-bit Counter to track bit output (0 to 3)
    Counter(width=2, enable=enable, reset=load, out=count);

    //The way i did it:
    //4 bit shifter. 
    //indata[0],indata[1],indata[2],indata[3]
    //0 - 0 - 0 - 0  <--OFF, enable = 0 & output of 4 bit shiter = 0. ENABLE = 1 IF ALL 4 BIT SHIFTER BITS ARE 0
    //1 - 0 - 0 - 0  <--ON, indata[0]         sout = (indata[0] AND 4bitshifter) OR (indata[1] AND 4bitshifter) OR (indata[2] AND 4bitshifter) OR (indata[3] AND 4bitshifter) 
    //0 - 1 - 0 - 0  <--ON, indata[1]
    //0 - 0 - 1 - 0  <--ON, indata[2]
    //0 - 0 - 0 - 1  <--ON, indata[3], complete = 1
    
    // Corrected: Use Mux4Way16 to select each bit from the 4-bit stored data
    Mux4Way16(
        in0[0..3]=storeddata[0],
        in1[0..3]=storeddata[1],
        in2[0..3]=storeddata[2],
        in3[0..3]=storeddata[3],
        sel=count,
        out[0..3]=mux_out
    );
    
    // Connect mux output to sout
    And(a=mux_out[0], b=true, out=sout);
    
    // Detect when count reaches 3 to assert complete
    And(a=count[0], b=count[1], out=completesignal);
    
    // Generate a one-cycle complete signal
    And(a=completesignal, b=enable, out=complete);
} 

